name: Test

on:
  push:
  pull_request:
  schedule:
    # Weekly, at 5:45 AM on Friday (somewhat randomly chosen).
    - cron: '45 5 * * 5'
  workflow_dispatch:

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        platform: [x86, x64]
        cygwin: [0, 1]
        hardlinks: [0, 1]
        os: [ubuntu-18.04, ubuntu-20.04, ubuntu-latest, windows-latest]

        include:
          # Prettier run names.
          - {os: ubuntu-18.04, name: Ubuntu 18.04}
          - {os: ubuntu-20.04, name: Ubuntu 20.04}
          - {os: ubuntu-latest, name: Ubuntu (latest)}
          - {cygwin: 1, name: Cygwin}
        exclude:
          # No Cygwin on Ubuntu.
          - {os: ubuntu-18.04, cygwin: 1}
          - {os: ubuntu-20.04, cygwin: 1}
          - {os: ubuntu-latest, cygwin: 1}
          # This action is not suitable for Windows hosts, use setup-mingw for
          # that.
          - {os: windows-latest, cygwin: 0}
          # Only test hardlinks on Cygwin.
          - {cygwin: 0, hardlinks: 1}

    runs-on: '${{ matrix.os }}'

    name: '${{ matrix.name }} / ${{ matrix.platform }} / Hardlinks: ${{ matrix.hardlinks }}'

    defaults:
      run:
        shell: pwsh

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Clean up PATH
        uses: egor-tensin/cleanup-path@v1
        if: runner.os == 'Windows'

      - name: Install Cygwin
        uses: egor-tensin/setup-cygwin@v3
        with:
          platform: '${{ matrix.platform }}'
        if: matrix.cygwin

      - name: Set up GCC
        uses: ./
        with:
          platform: '${{ matrix.platform }}'
          cygwin: '${{ matrix.cygwin }}'
          cc: 1
          hardlinks: '${{ matrix.hardlinks }}'

      - name: Build foo.exe
        run: |
          $flags = @()
          if ('${{ matrix.platform }}' -eq 'x86') {
              $flags += '-m32'
          }
          $flags += '-std=c++14','-o','foo','foo.cpp'
          if ('${{ runner.os }}' -eq 'Linux') {
              $flags += '-lpthread'
          }
          g++ $flags
        if: '!matrix.cygwin || matrix.hardlinks'

      - name: Build foo.exe on Cygwin
        run: |
          $cwd = cygpath.exe -ua (Get-Location)
          $arch = if ('${{ matrix.platform }}' -eq 'x64') { '-m64' } else { '-m32' }
          $cmd = printf.exe -- 'cd %q && g++ %q -std=c++14 -o foo foo.cpp' $cwd $arch
          bash.exe --login -o errexit -c $cmd
        if: matrix.cygwin && !matrix.hardlinks

      - name: Run foo.exe
        run: |
          $expected = @"
          Doing something #1
          Doing something #2
          Doing something #3
          "@

          $actual = & (Join-Path . foo)
          $actual = $actual -join [Environment]::NewLine

          $($actual -eq $expected) -or $(throw @"
          Unexpected output:
          $actual
          "@)

      # Is this really the most stable piece of `gcc --version` output?
      - name: Check cc/c++
        run: |
          echo (Get-Command cc).Path
          $cc = & cc --version
          echo $cc
          $($cc | Select-String -Pattern "This is free software; see the source for copying conditions." -SimpleMatch -Quiet) -or $(throw "Unexpected `cc --version` output")
          echo (Get-Command c++).Path
          $cxx = & c++ --version
          echo $cxx
          $($cxx | Select-String -Pattern "This is free software; see the source for copying conditions." -SimpleMatch -Quiet) -or $(throw "Unexpected `c++ --version` output")
        if: '!matrix.cygwin || matrix.hardlinks'

      - name: Check cc/c++ on Cygwin
        run: |
          $cc = bash.exe --login -o errexit -c 'cc --version'
          echo $cc
          $($cc | Select-String -Pattern "This is free software; see the source for copying conditions." -SimpleMatch -Quiet) -or $(throw "Unexpected `cc --version` output")
          $cxx = bash.exe --login -o errexit -c 'c++ --version'
          echo $cxx
          $($cxx | Select-String -Pattern "This is free software; see the source for copying conditions." -SimpleMatch -Quiet) -or $(throw "Unexpected `c++ --version` output")
        if: matrix.cygwin && !matrix.hardlinks
